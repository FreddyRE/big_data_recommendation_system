services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg:/var/lib/postgresql/data
    restart: unless-stopped

  ingest:
    build: ./ingest-api
    env_file: .env
    ports:
      - "80:8001"
    depends_on: [db, redpanda]
    restart: unless-stopped

  redpanda:
    image: redpandadata/redpanda:latest
    command: >
      redpanda start --overprovisioned --smp 1 --memory 768M --reserve-memory 0M --check=false
      --kafka-addr PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
      --advertise-kafka-addr PLAINTEXT://redpanda:9092,OUTSIDE://172.31.32.202:19092
      --pandaproxy-addr 0.0.0.0:8082 --advertise-pandaproxy-addr redpanda:8082
    ports:
      - "9092:9092" 
      - "19092:19092"
    volumes: [ "rp:/var/lib/redpanda/data" ]
    restart: unless-stopped

  console:
    image: redpandadata/console:latest
    environment:
      KAFKA_BROKERS: redpanda:9092
    depends_on: [redpanda]
    ports:
      - "8080:8080"  # web UI; keep SG closed unless you need remote access
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin12345
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console UI
    volumes: [ "minio:/data" ]
    restart: unless-stopped

volumes:
  pg:
  rp:
  minio: